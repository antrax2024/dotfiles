(defwidget bar []
  (box :orientation "h"
    (workspaces)
    (rightStuff))
)


(defwidget rightStuff []
  (box :class "rightStuff" :orientation "h" 
       :halign "end"
       :space-evenly false


    (display  :iconFile "/home/gargula/dotfiles/eww/icons/device_pci.svg"
              :value nvidiaStatus
    )

    (display  :iconFile "/home/gargula/dotfiles/eww/icons/cpu.svg"
              :value cpuStatus
    )

    (display  :iconFile "/home/gargula/dotfiles/eww/icons/memory.svg"
              :value ramStatus
    )

    (display  :iconFile "/home/gargula/dotfiles/eww/icons/clockify-blue.svg"
              :value clock
    )

  )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Workspaces
(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :halign "start"
       :spacing 15
    (button :onclick "bspc desktop -f 1" 1)
    (button :onclick "bspc desktop -f 2" 2)
    (button :onclick "bspc desktop -f 3" 3)
    (button :onclick "bspc desktop -f 4" 4)

    )
  )
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defwidget display [iconFile value]
  (box
    :orientation "h"
    :class "display"
    :halign "end"
    :space-evenly false
    (image :class "icon" :path iconFile :halign "end" :valign "center") 
    (label :class "value" :text value :halign "start" :valign "center")
  )
  
)

(defwidget cpuGraph [cpuUtilization]
  (progress :class "cpuProgress"
            :value cpuUtilization
            :orientation "h"
  )
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Variables
(defpoll nvidiaStatus :interval "500ms"
  "/home/gargula/dotfiles/bin/nvidia-status.sh")

(defpoll cpuStatus :interval "500ms"
  "/home/gargula/dotfiles/bin/cpuinfo.py"
)

(defpoll ramStatus :interval "500ms"
  "/home/gargula/dotfiles/bin/raminfo.py"
)

(defpoll clock :interval "1s" 
  "/home/gargula/dotfiles/bin/gettime.py"
)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defwindow bar
  :monitor 0
  :geometry (geometry :x "0px"
                      :y "0px"
                      :width "100%"
                      :height "32px"
                      :anchor "top center")
  :stacking "bg"
  ;:reserve (struts :distance "20px" :side "top")
  :windowtype "dock"
  :wm-ignore false
  (bar))
